<?php

echo "-------------<br>";
echo "Задача 1<br>";
echo "-------------<br>";

/*
 * 1. С помощью цикла while вывести все числа в промежутке от 0 до 100, которые делятся на 3 без остатка.
 */

$i = 0;
while ($i <= 100) {
    if (($i % 3) == 0) {
        echo "$i; ";
    }
    $i++;
}
echo "<br>";

echo "-------------<br>";
echo "Задача 2<br>";
echo "-------------<br>";

/*
 * 2. С помощью цикла do…while написать функцию для вывода чисел от 0 до 10, чтобы результат выглядел так:
 *
 * 0 – это ноль.
 * 1 – нечетное число.
 * 2 – четное число.
 * 3 – нечетное число.
 * …
 * 10 – четное число.
 */

$i = 0;
do {
    $string = "нечетное число";
    if ($i == 0) {
        $string = "ноль";
    } elseif (($i % 2) == 0) {
        $string = "четное число";
    }
    echo "$i - это " . $string . ".<br>";
} while (++$i <= 10);
echo "<br>";

echo 'Вариант 2<br>';

$i = 0;
do {
    if ($i == 0) {
        echo ($i . ' - это ноль');
    } else if ($i % 2 == 0) {
        echo ($i . ' - четное число');
    } else {
        echo ($i . ' - нечетное число');
    }
    $i++;
} while ($i <= 10);
echo '<br>';

echo "-------------<br>";
echo "Задача 3<br>";
echo "-------------<br>";

/*3. Объявить массив, в котором в качестве ключей будут использоваться названия областей, а в качестве значений – массивы с названиями городов из соответствующей области. Вывести в цикле значения массива, чтобы результат был таким:
Московская область:
Москва, Зеленоград, Клин
Ленинградская область:
Санкт-Петербург, Всеволожск, Павловск, Кронштадт
Рязанская область … (названия городов можно найти на maps.yandex.ru)*/

$cities = [
    'Московская область' => [
        'Москва', 'Зеленоград', 'Клин'
    ],
    'Ленинградская область' => [
        'Санкт-Петербург', 'Всеволожск', 'Павловск', 'Кронштадт'
    ],
    'Рязанская область' => [
        'Рязань', 'Касимов', 'Скопин'
    ]
];
foreach ($cities as $region => $city) {
    $result .= $region . ':<br>';
    foreach ($city as $key => $cityName) {
        $result .= $cityName . (($key < count($city) - 1) ? ', ' : '');
    }
    $result .= '<br>';
}
echo $result;

echo "-------------<br>";
echo "Задача 4<br>";
echo "-------------<br>";

/*
 * 4. Объявить массив, индексами которого являются буквы русского языка,
 * а значениями – соответствующие латинские буквосочетания
 * (‘а’=> ’a’, ‘б’ => ‘b’, ‘в’ => ‘v’, ‘г’ => ‘g’, …, ‘э’ => ‘e’, ‘ю’ => ‘yu’, ‘я’ => ‘ya’).
 * Написать функцию транслитерации строк.
  */

$string = "<p>1. Чтобы показать заказчику эскизы, нужно где-то найти тексты и картинки. Как правило, ни того, ни другого в момент показа эскизов у дизайнера нету.</p><p>2. Что же делает дизайнер? Рыбу. Рыбу можно вставлять, использовать, вешать, заливать, показывать, запихивать... Словом, с ней делают что угодно, лишь бы эскиз был максимально похож на готовую работу.</p><p>3. Если в качестве рыбных картинок использовать цветные прямоугольники, а вместо текста — несколько повторяющихся слов, эскиз будет выглядеть неестественно.</p>";
function translit($string)
{
    $dictionary = [
        "а" => "a",
        "б" => "b",
        "в" => "v",
        "г" => "g",
        "д" => "d",
        "е" => "e",
        "ё" => "e",
        "ж" => "zh",
        "з" => "z",
        "и" => "i",
        "й" => "y",
        "к" => "k",
        "л" => "l",
        "м" => "m",
        "н" => "n",
        "о" => "o",
        "п" => "p",
        "р" => "r",
        "с" => "s",
        "т" => "t",
        "у" => "u",
        "ф" => "f",
        "х" => "h",
        "ц" => "c",
        "ч" => "ch",
        "ш" => "sh",
        "щ" => "sch",
        "ь" => "'",
        "ы" => "y",
        "ъ" => "''",
        "э" => "e",
        "ю" => "yu",
        "я" => "ya"
    ];
    // Преобразование строки в массив. Решение проблемы с UTF-8
    // https://stackoverflow.com/questions/21653033/php-how-to-split-a-utf-8-string
    $stringToArray = preg_split('//u', $string, -1, PREG_SPLIT_NO_EMPTY);
    foreach ($stringToArray as $key => $character) {
        foreach ($dictionary as $rus => $trans) {
            if ($character == $rus) {
                $stringToArray[$key] = $trans;
                break;
            } elseif ($character == mb_strtoupper($rus)) {
                // mb_strtoupper — Приведение строки к верхнему регистру (Функции для работы с Многобайтными строками)
                $stringToArray[$key] = mb_strtoupper($trans);
                break;
            }
        }
    }
    // implode — Объединяет элементы массива в строку
    return implode($stringToArray);
}

echo "<b>Исходная строка:</b> $string <hr>";
echo "<b>Транслитерация:</b>" . translit($string);

echo 'Вариант 2<br>';

$string = "<p>1. Чтобы показать заказчику эскизы, нужно где-то найти тексты и картинки. Как правило, ни того, ни другого в момент показа эскизов у дизайнера нету.</p><p>2. Что же делает дизайнер? Рыбу. Рыбу можно вставлять, использовать, вешать, заливать, показывать, запихивать... Словом, с ней делают что угодно, лишь бы эскиз был максимально похож на готовую работу.</p><p>3. Если в качестве рыбных картинок использовать цветные прямоугольники, а вместо текста — несколько повторяющихся слов, эскиз будет выглядеть неестественно.</p>";
$translit = array("а" => "a", "б" => "b", "в" => "v", "г" => "g", "д" => "d", "е" => "e", "ё" => "e", "ж" => "zh",  "з" => "z", "и" => "i", "й" => "y", "к" => "k", "л" => "l", "м" => "m", "н" => "n", "о" => "o", "п" => "p", "р" => "r", "с" => "s", "т" => "t", "у" => "u", "ф" => "f", "х" => "kh", "ц" => "c", "ч" => "ch",  "ш" => "sh",  "щ" => "sch", "ь" => "",  "ы" => "y", "ъ" => "", "э" => "e", "ю" => "yu", "я" => "ya", "А" => "A", "Б" => "B", "В" => "V", "Г" => "G", "Д" => "D", "Е" => "E", "Ё" => "E", "Ж" => "Zh",  "З" => "Z", "И" => "I", "Й" => "Y", "К" => "K", "Л" => "L", "М" => "M", "Н" => "N", "О" => "O", "П" => "P", "Р" => "R", "С" => "S", "Т" => "T", "У" => "U", "Ф" => "F", "Х" => "KH", "Ц" => "C", "Ч" => "Ch",  "Ш" => "Sh",  "Щ" => "Sch", "Ь" => "",  "Ы" => "Y", "Ъ" => "", "Э" => "E", "Ю" => "Yu",  "Я" => "Ya");
echo $string."<br />";
echo strtr($string, $translit);

echo "-------------<br>";
echo "Задача 5<br>";
echo "-------------<br>";

/*5. Написать функцию, которая заменяет в строке пробелы на подчеркивания и возвращает видоизмененную строчку.*/

function space_change($text)
{
    $arText = preg_split('//u', $text, -1, PREG_SPLIT_NO_EMPTY);
    $textResult = [];
    foreach ($arText as $symbol) {
        if ($symbol == ' ') {
            $symbol = '_';
        }
        $textResult[] = $symbol;
    }
    return implode($textResult);
}

echo space_change('Привет, GeekBrains! Да здравствует PHP.');
echo '<br>';
echo "-------------<br>";
echo "Задание 7<br>";
echo "-------------<br>";

/*
 * 7. (*) Вывести с помощью цикла for числа от 0 до 9, НЕ используя тело цикла. То есть выглядеть должно так:
 * for (…) {// здесь пусто}
 */

for ($i = 0; $i < 10; print $i++ . "<br>") {
    // здесь пусто
}

echo "-------------<br>";
echo "Задание 8<br>";
echo "-------------<br>";

/*
 * 8. (*) Повторить третье задание, но вывести на экран только города, начинающиеся с буквы «К».
 *
 */

define("LETTER", "К");

$array = [
    "Московская область" => ["Москва", "Зеленоград", "Клин"],
    "Ленинградская область" => ["Санкт-Петербург", "Всеволожск", "Павловск", "Кронштадт"],
    "Рязанская область" => ["Рязань", "Касимов", "Скопин"]
];

echo "<pre>";
var_dump($array);
echo "<hr>";

foreach ($array as $state => $towns) {
    foreach ($towns as $key => $value) {
        // mb_substr — Возвращает часть строки.
        // Корректно выполняет substr() для многобайтовых кодировок, учитывая количество символов.
        if (mb_substr($value, 0, 1) == LETTER) {
            echo "$value\n";
            break;
        }
    }
}

echo "</pre>";

echo "-------------<br>";
echo "Задание 9<br>";
echo "-------------<br>";

/*9. *Объединить две ранее написанные функции в одну, которая получает строку на русском языке, производит транслитерацию и замену пробелов на подчеркивания (аналогичная задача решается при конструировании url-адресов на основе названия статьи в блогах).*/

function translit_and_space($text)
{
    $alphabet = [
        "а" => "a",
        "б" => "b",
        "в" => "v",
        "г" => "g",
        "д" => "d",
        "е" => "e",
        "ё" => "e",
        "ж" => "zh",
        "з" => "z",
        "и" => "i",
        "й" => "y",
        "к" => "k",
        "л" => "l",
        "м" => "m",
        "н" => "n",
        "о" => "o",
        "п" => "p",
        "р" => "r",
        "с" => "s",
        "т" => "t",
        "у" => "u",
        "ф" => "f",
        "х" => "h",
        "ц" => "c",
        "ч" => "ch",
        "ш" => "sh",
        "щ" => "sch",
        "ь" => "'",
        "ы" => "y",
        "ъ" => "''",
        "э" => "e",
        "ю" => "yu",
        "я" => "ya"
    ];

    $arText = preg_split('//u', $text, -1, PREG_SPLIT_NO_EMPTY);
    $textResult = [];
    foreach ($arText as $symbol) {
        foreach ($alphabet as $key => $letter) {
            if ($symbol == $key) {
                $symbol = $letter;
            } elseif ($symbol == ' ') {
                $symbol = '_';
            }
        }
        $textResult[] = $symbol;
    }
    return implode($textResult);
}

echo translit_and_space('Привет, GeekBrains! Да здравствует PHP.');
?>



